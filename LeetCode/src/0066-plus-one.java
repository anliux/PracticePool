//0066-加一
//思路：用数学解决的数组问题



//耗时：0ms，击败100%的用户
/*
    - 可能的情况就只有两种：除 9 之外的数字加一；数字 9。
    - 加一得十进一位个位数为 0 加法运算如不出现进位就运算结束了且进位只会是一。
    - 所以只需要判断有没有进位并模拟出它的进位方式，如十位数加 1 个位数置为 0，如此循环直到判断没有再进位就退出循环返回结果。
    - 特殊情况：当出现 99、999 之类的数字时，循环到最后也需要进位，这时，只需手动将它进一位。
*/
class Solution {
    public int[] plusOne(int[] digits) {
        //从数组末尾开始循环，直到索引值为0
        for(int i = digits.length-1; i>=0; i--){
            //首先i对应的元素+1，然后对得到的结果进行判断
            digits[i]++;
            
            //取余：若结果不为0，说明无进位，直接返回；否则，需要继续判断下一位是否有进位
            digits[i] = digits[i] % 10;
            if(digits[i] != 0)
                return digits;
        }

        //若循环结束后仍没有返回，说明是n个9，直接新建长度+1数组，并赋值第一个元素为1后返回
        digits = new int[digits.length + 1];
        digits[0] = 1;
        return digits;
    }
}
